@use '../../../../../styles.scss' as global;
@use '../../../../styles';

.form-input {
    display: flex;
    flex-direction: column;
    align-items: start;
    gap: .2rem;

    &:has(.wrong) {
        .input-title {
            color: red;
        }
    }

    &:not(:has(.wrong)) {
        .input-title {
            color: global.$main-color;
        }
    }

    .wrong-desc {
        color: red;
    }

    .input-title {
        font-weight: 600;
        user-select: none;
    }

    &.no-edit {
        pointer-events: none !important;

        * {
            filter: grayscale(1);
            opacity: .8;
            pointer-events: none !important;
        }
    }

    .input-content {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: .3em;
        overflow: hidden;
        transition: .1s ease-in-out color;

        &:not(.options-content) {
            width: 100%;
        }

        .password-content {
            position: relative;
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: flex-end;
            width: 100%;

            &:hover,
            &:has(input:focus) {
                .password-eye {
                    opacity: 1;
                }
            }

            &:not(:hover, :has(input:focus)) {
                .password-eye {
                    pointer-events: none;
                    opacity: 0;
                }
            }

            .password-eye {
                position: absolute;
                display: flex;
                align-items: center;
                justify-content: center;
                right: .2em;
                padding: .15em;
                font-size: 1.2em;
                cursor: pointer;
                color: global.$main-color;
                transition: .15s ease opacity;

                &:not(.not-see) {
                    .see {
                        display: block;
                    }

                    .not-see {
                        display: none;
                    }
                }

                &.not-see {
                    .see {
                        display: none;
                    }

                    .not-see {
                        display: block;
                    }
                }

                &::before {
                    content: '';
                    position: absolute;
                    inset: 0;
                    border-radius: .25em;
                    background: global.$main-color;
                    opacity: 0;
                    transition: .2s ease-in-out opacity;
                }

                &:hover::before {
                    opacity: .25;
                }

                * {
                    pointer-events: none;
                    z-index: 100;
                }
            }
        }

        .input {
            font-size: 1em;
            background: #eee;
            padding: .4em;
            width: 100%;
        }

        .week_day {
            background: #eee;
            text-transform: uppercase;
            padding: .2em .4em;
            border-radius: .3rem;
            cursor: pointer;
        }

        .horario-input {
            font-size: 1.4em;
            font-family: monospace;
            background: #eee;
            padding: .2em .4em;
            border-radius: .3rem;
            text-align: center;
        }

        &:has(.input-horario.editing) .input-horario:not(.editing) {
            opacity: .6;
            pointer-events: none;
        }

        .input-horario {
            font-size: 1.4em;
            font-family: monospace;
            background: global.$main-color;
            color: #eee;
            padding: .2em .4em;
            border-radius: .3rem;
            text-align: center;
            display: flex;
            flex-direction: row;
            align-items: center;
            transition: .15s ease-in-out opacity;

            &.editing {
                .edit-horario {
                    color: white;

                    &:has(.freeze) {
                        opacity: .6;
                        pointer-events: none;

                        .ionicon {
                            scale: .75;
                        }
                    }

                    &:not(:has(.freeze)) {
                        .ionicon {
                            scale: 1;

                            &.rotate {
                                rotate: -90deg;
                            }
                        }
                    }
                }
            }

            &:not(.editing) {
                .edit-horario {
                    .ionicon {
                        scale: .75;
                    }

                    &:hover {
                        color: white;

                        .ionicon {
                            scale: 1;

                            &.rotate {
                                rotate: -90deg;
                            }
                        }
                    }
                }
            }

            .edit-horario {
                position: relative;
                cursor: pointer;
                background: transparent;
                color: inherit;
                font-size: 1.1em;
                transition: .2s ease-in-out;

                .ionicon {
                    transition: .2s ease-in-out;
                }

                &:hover {
                    filter: drop-shadow(0 0 .3em #fffa);
                }
            }
        }

        .create-horario {
            position: relative;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: .25em;
            background: #000;
            color: #eee;
            font-weight: 600;
            font-size: 1em;
            border-radius: .3rem;
            padding: .1em .7em;
            padding-right: .4em;
            overflow: hidden;
            transition: .3s ease-in-out;
            user-select: none;

            &::before {
                content: '';
                position: absolute;
                inset: 0;
                background: global.$main-color;
                transition: .1s ease-in-out;
            }

            &:not(.enable) {
                opacity: .65;
                pointer-events: none;
            }

            &:hover::before {
                opacity: .6;
            }

            * {
                z-index: 10;
            }
        }

        .divider {
            height: 1em;
            width: .1em;
            background: currentColor;
            opacity: .15;
            border-radius: 1em;
            margin-inline: .5em;
        }

        .textarea {
            min-height: 2em;
            height: 4em;
            max-height: 10em;
            resize: vertical;
        }

        .radio-option {
            display: flex;
        }

        .option {
            @extend %option;
        }
    }

    .row-wrap {
        gap: .25em;
    }

    .col {
        gap: .5em;
    }
}